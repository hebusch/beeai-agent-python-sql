---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: beeai-agent
  labels:
    app: beeai-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: beeai-agent
  template:
    metadata:
      labels:
        app: beeai-agent
    spec:
      containers:
        - name: agent
          # IMPORTANTE: Cambia esta imagen por la tuya después de buildear
          image: beeai-agent:latest
          imagePullPolicy: Never  # Siempre usa la imagen local (sin pull de registry)
          ports:
            - containerPort: 8000
              name: http
          env:
            # Configuración del servidor
            - name: HOST
              value: "0.0.0.0"
            - name: PORT
              value: "8000"
            
            # URL del code interpreter (usa el nombre del servicio de k8s)
            - name: CODE_INTERPRETER_URL
              value: "http://code-interpreter-service:50081"
            
            # URL de la plataforma BeeAI (interna, para registro del agente)
            - name: PLATFORM_URL
              value: "http://beeai-platform-svc:8333"
            
            # URL pública de la plataforma (para URLs que ve el usuario)
            - name: PUBLIC_PLATFORM_URL
              value: "https://beeai.hebusch.com"
            
            # Modelo LLM a usar
            - name: LLM_CHAT_MODEL_NAME
              value: "watsonx:ibm/granite-4-h-small"
            
            # Modo de ejecución (false para auto-registro con BeeAI Platform)
            - name: PRODUCTION_MODE
              value: "false"
            
            # Credenciales de BeeAI Platform (para registro)
            - name: BEEAI__ADMIN_PASSWORD
              value: "Admin123"
            
            # Credenciales de WatsonX (desde Secret)
            - name: WATSONX_PROJECT_ID
              valueFrom:
                secretKeyRef:
                  name: watsonx-credentials
                  key: project-id
            - name: WATSONX_API_KEY
              valueFrom:
                secretKeyRef:
                  name: watsonx-credentials
                  key: api-key
            
            # Credenciales de PostgreSQL (OPCIONAL - descomenta si necesitas)
            # - name: PSQL_HOST
            #   value: "postgresql.default.svc.cluster.local"
            # - name: PSQL_PORT
            #   value: "5432"
            # - name: PSQL_USERNAME
            #   valueFrom:
            #     secretKeyRef:
            #       name: postgres-credentials
            #       key: username
            # - name: PSQL_PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: postgres-credentials
            #       key: password
          
          volumeMounts:
            # Montar el storage compartido en /app/tmp
            # El code interpreter guarda archivos en /storage (raíz del volumen)
            # que se mapea a /var/lib/beeai/storage en el host
            - name: storage-volume
              mountPath: /app/tmp
          
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          
          # Health checks deshabilitados - el servidor no expone /health
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: 8000
          #   initialDelaySeconds: 30
          #   periodSeconds: 10
          # 
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: 8000
          #   initialDelaySeconds: 10
          #   periodSeconds: 5
      
      volumes:
        - name: storage-volume
          hostPath:
            path: /var/lib/beeai/storage
            type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: beeai-agent-service
  labels:
    app: beeai-agent
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      name: http
  selector:
    app: beeai-agent

